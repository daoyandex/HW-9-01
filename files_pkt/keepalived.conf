
global_defs {
    enable_script_security
    script_user root
    #notification_email {
    #  acassen@firewall.loc
    #  failover@firewall.loc
    #  sysadmin@firewall.loc
    #}
    #notification_email_from Alexandre.Cassen@firewall.loc
    #smtp_server 192.168.200.1
    #smtp_connect_timeout 30
    #router_id LVS_DEVEL
    #vrrp_skip_check_adv_addr
    #vrrp_strict
    #vrrp_garp_interval 0
    #vrrp_gna_interval 0
}

# Adds a script to be executed periodically. Its exit code will be
# recorded for all VRRP instances and sync groups which are monitoring it.
vrrp_script check_webserver_available {
    # path of the script to execute
    script "/etc/keepalived/check_webserver_available.sh nginx"
    # seconds between script invocations, (default: 1 second)
    interval 3
    # seconds after which script is considered to have failed
    timeout 10

    # adjust priority by this weight, (default: 0)
    # For description of reverse, see track_script.
    # 'weight 0 reverse' will cause the vrrp instance to be down when the
    # script is up, and vice versa.
    #weight <INTEGER:-253..253> [reverse]

    # required number of successes for OK transition
    #rise <INTEGER>

    # required number of successes for KO transition
    #fall <INTEGER>

    # user/group names to run script under.
    #  group default to group of user
    user root root

    # assume script initially is in failed state
    init_fail
}



vrrp_instance VI_1 {
    state MASTER
    interface enp0s8
    virtual_router_id 15
    priority 255
    advert_int 1
    virtual_ipaddress {
        192.168.1.15/24
    }
    
    track_script {
        check_webserver_available
        #<SCRIPT_NAME>
        #<SCRIPT_NAME> weight <-253..253> [reverse|no_reverse]
    }
}
